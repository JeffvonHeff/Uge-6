Sådan fungerer det lille ETL-projekt
===================================

1. Læs CSV-filerne
   ---------------
   ``Extract.extract_data`` åbner de tre CSV-filer, der følger med projektet
   (orders, order_items og customers). Der sker intet kompliceret her – pandas
   læser blot rækkerne ind i DataFrames, så vi kan arbejde med dem i hukommelsen.

2. Byg et overskueligt ordreoverblik
   ---------------------------------
   ``Transform.build_order_summary`` gør dataene lettere at forstå:

   * Hver ordre-dato som ``01/01/2016`` bliver konverteret til et rigtigt
     datoobjekt.
   * Hver ``order_items``-række får en ``line_total``-værdi (antal × pris ×
     rabat).
   * Totaler summeres per ordre og kombineres med det tilhørende kundenavn.

   Funktionen returnerer én ryddelig tabel med de kolonner, vi er mest
   interesserede i: ``order_id``, ``order_date``, ``customer_id``,
   ``customer_name`` og ``order_total``.

3. Gem oversigten i PostgreSQL
   ----------------------------
   ``Load.create_connection`` åbner en forbindelse ved hjælp af
   ``POSTGRES_*``-miljøvariablerne (standardværdier er sat op til hurtige tests).
   Derefter dropper ``Load.load_order_summary`` tabellen ``order_summary``, hvis
   den allerede findes, genskaber den med et helt simpelt schema og indsætter
   hver række fra oversigts-DataFrame'en.

4. Kør det hele fra ``main.py``
   ----------------------------
   ``main.run_pipeline`` kalder de tre trin ovenfor, udskriver statusbeskeder og
   viser de første par rækker af oversigten, så du kan se, hvad der bliver gemt i
   databasen. Kør ``python main.py`` – så er du færdig.
